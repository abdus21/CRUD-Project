{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { Create } from '../../apis/crud';\nimport { ErrorToast, isEmpty, SuccessToast } from '../../Helper/ValidationHelper';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateForm = () => {\n  _s();\n\n  let ProductName,\n      ProductCode,\n      Img,\n      UnitPrice,\n      Qty,\n      TotalPrice,\n      Loader = useRef();\n\n  const SaveData = () => {\n    let Product_Name = ProductName.value;\n    let Product_Code = ProductCode.value;\n    let Image = Img.value;\n    let Unit_Price = UnitPrice.value;\n    let Qty_Price = Qty.value;\n    let Total_Price = TotalPrice.value;\n\n    if (isEmpty(Product_Name)) {\n      ErrorToast(\"Product Name Required\");\n    } else if (isEmpty(Product_Code)) {\n      ErrorToast(\"Product Code Required\");\n    } else if (isEmpty(Image)) {\n      ErrorToast(\"Product Image Required\");\n    } else if (isEmpty(Unit_Price)) {\n      ErrorToast(\"Product Unit Price Required\");\n    } else if (isEmpty(Qty_Price)) {\n      ErrorToast(\"Product Qty Price Required\");\n    } else if (isEmpty(Total_Price)) {\n      ErrorToast(\"Product Total Price Required\");\n    } else {\n      Create(Product_Name, Product_Code, Image, Unit_Price, Qty_Price, Total_Price).then(result => {\n        if (result === true) {\n          SuccessToast(\"Data Create Success\");\n          ProductName.value = '';\n          ProductCode.value = '';\n          Img.value = '';\n          UnitPrice.value = '';\n          Qty.value = '';\n          TotalPrice.value = '';\n        } else {\n          ErrorToast(\"Data Not Create\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CreateForm, \"QKGQDjyk5y0w7i3VtGCNacEDPfU=\");\n\n_c = CreateForm;\nexport default CreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"names":["React","useRef","Button","Col","Container","Row","Create","ErrorToast","isEmpty","SuccessToast","CreateForm","ProductName","ProductCode","Img","UnitPrice","Qty","TotalPrice","Loader","SaveData","Product_Name","value","Product_Code","Image","Unit_Price","Qty_Price","Total_Price","then","result"],"sources":["C:/Users/DELL/Desktop/MERN/CRUD-Project/client/src/components/createProduct/CreateForm.jsx"],"sourcesContent":["import React, { useRef } from 'react'\r\nimport { Button, Col, Container, Row } from 'react-bootstrap'\r\nimport { Create } from '../../apis/crud';\r\nimport { ErrorToast, isEmpty, SuccessToast } from '../../Helper/ValidationHelper';\r\n\r\nconst CreateForm = () => {\r\n    let ProductName,ProductCode,Img,UnitPrice,Qty,TotalPrice,Loader = useRef();\r\n    const SaveData = ()=>{\r\n        let Product_Name = ProductName.value\r\n        let Product_Code = ProductCode.value\r\n        let Image = Img.value\r\n        let Unit_Price = UnitPrice.value\r\n        let Qty_Price = Qty.value\r\n        let Total_Price = TotalPrice.value\r\n\r\n        \r\n        if(isEmpty(Product_Name)){\r\n            ErrorToast(\"Product Name Required\");\r\n        }else if(isEmpty(Product_Code)){\r\n            ErrorToast(\"Product Code Required\");\r\n        }else if(isEmpty(Image)){\r\n            ErrorToast(\"Product Image Required\");\r\n        }else if(isEmpty(Unit_Price)){\r\n            ErrorToast(\"Product Unit Price Required\");\r\n        }else if(isEmpty(Qty_Price)){\r\n            ErrorToast(\"Product Qty Price Required\");\r\n        }else if(isEmpty(Total_Price)){\r\n            ErrorToast(\"Product Total Price Required\");\r\n        }else{\r\n            Create(Product_Name,Product_Code,Image,Unit_Price,Qty_Price,Total_Price).then((result)=>{\r\n                if(result===true){\r\n                    SuccessToast(\"Data Create Success\");\r\n                      ProductName.value = '';\r\n                      ProductCode.value  = '';\r\n                      Img.value = '';\r\n                      UnitPrice.value = '';\r\n                      Qty.value = '';\r\n                      TotalPrice.value = '';\r\n                }else{\r\n                    ErrorToast(\"Data Not Create\");\r\n                }\r\n            });\r\n\r\n\r\n\r\n        }\r\n    }\r\n  return (\r\n    <>\r\n    \r\n    </>\r\n   \r\n  )\r\n}\r\n\r\nexport default CreateForm"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,SAAtB,EAAiCC,GAAjC,QAA4C,iBAA5C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,YAA9B,QAAkD,+BAAlD;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,IAAIC,WAAJ;EAAA,IAAgBC,WAAhB;EAAA,IAA4BC,GAA5B;EAAA,IAAgCC,SAAhC;EAAA,IAA0CC,GAA1C;EAAA,IAA8CC,UAA9C;EAAA,IAAyDC,MAAM,GAAGhB,MAAM,EAAxE;;EACA,MAAMiB,QAAQ,GAAG,MAAI;IACjB,IAAIC,YAAY,GAAGR,WAAW,CAACS,KAA/B;IACA,IAAIC,YAAY,GAAGT,WAAW,CAACQ,KAA/B;IACA,IAAIE,KAAK,GAAGT,GAAG,CAACO,KAAhB;IACA,IAAIG,UAAU,GAAGT,SAAS,CAACM,KAA3B;IACA,IAAII,SAAS,GAAGT,GAAG,CAACK,KAApB;IACA,IAAIK,WAAW,GAAGT,UAAU,CAACI,KAA7B;;IAGA,IAAGZ,OAAO,CAACW,YAAD,CAAV,EAAyB;MACrBZ,UAAU,CAAC,uBAAD,CAAV;IACH,CAFD,MAEM,IAAGC,OAAO,CAACa,YAAD,CAAV,EAAyB;MAC3Bd,UAAU,CAAC,uBAAD,CAAV;IACH,CAFK,MAEA,IAAGC,OAAO,CAACc,KAAD,CAAV,EAAkB;MACpBf,UAAU,CAAC,wBAAD,CAAV;IACH,CAFK,MAEA,IAAGC,OAAO,CAACe,UAAD,CAAV,EAAuB;MACzBhB,UAAU,CAAC,6BAAD,CAAV;IACH,CAFK,MAEA,IAAGC,OAAO,CAACgB,SAAD,CAAV,EAAsB;MACxBjB,UAAU,CAAC,4BAAD,CAAV;IACH,CAFK,MAEA,IAAGC,OAAO,CAACiB,WAAD,CAAV,EAAwB;MAC1BlB,UAAU,CAAC,8BAAD,CAAV;IACH,CAFK,MAED;MACDD,MAAM,CAACa,YAAD,EAAcE,YAAd,EAA2BC,KAA3B,EAAiCC,UAAjC,EAA4CC,SAA5C,EAAsDC,WAAtD,CAAN,CAAyEC,IAAzE,CAA+EC,MAAD,IAAU;QACpF,IAAGA,MAAM,KAAG,IAAZ,EAAiB;UACblB,YAAY,CAAC,qBAAD,CAAZ;UACEE,WAAW,CAACS,KAAZ,GAAoB,EAApB;UACAR,WAAW,CAACQ,KAAZ,GAAqB,EAArB;UACAP,GAAG,CAACO,KAAJ,GAAY,EAAZ;UACAN,SAAS,CAACM,KAAV,GAAkB,EAAlB;UACAL,GAAG,CAACK,KAAJ,GAAY,EAAZ;UACAJ,UAAU,CAACI,KAAX,GAAmB,EAAnB;QACL,CARD,MAQK;UACDb,UAAU,CAAC,iBAAD,CAAV;QACH;MACJ,CAZD;IAgBH;EACJ,CAvCD;;EAwCF,oBACE,qCADF;AAMD,CAhDD;;GAAMG,U;;KAAAA,U;AAkDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}